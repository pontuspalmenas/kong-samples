networks:
  kong-net:
    name: kong-net
    driver: bridge

x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_HOST: kong-db
  KONG_PG_DATABASE: kong
  KONG_PG_USER: kong
  KONG_PG_PASSWORD: kong
  KONG_LICENSE_DATA: "{KONG_LICENSE_DATA}"

services:
  postgres:
    image: postgres:latest
    restart: always
    container_name: postgres
    networks:
      - kong-net
    ports:
      - "6432:5432/tcp"
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 10s
      retries: 10      

  kong-bootstrap:
    image: ${KONG_DOCKER_IMAGE:-kong/kong-gateway:3.10.0.5}
    container_name: kong-bootstrap
    command: kong migrations bootstrap
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *kong-env 
    networks:
      - kong-net
    restart: on-failure

  kong-cp:
    image: ${KONG_DOCKER_IMAGE:-kong/kong-gateway:3.10.0.5}
    container_name: kong-cp
    networks:
      - kong-net
    depends_on:
      - postgres
      - kong-bootstrap
    restart: on-failure
    ports:
      - "8001:8001/tcp"
      - "8002:8002/tcp"
      - "8003:8003/tcp"
      - "8004:8004/tcp"
      - "8005:8005/tcp"
      - "8006:8006/tcp"
      - "8444:8444/tcp"
      - "8445:8445/tcp"
      - "8446:8446/tcp"
    environment:
      <<: *kong-env 
      KONG_ROLE: control_plane
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "/certs/cluster.crt,system"
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002, 0.0.0.0:8445 ssl
      KONG_LOG_LEVEL: debug
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PASSWORD: kong
      KONG_ENFORCE_RBAC: "off"
    volumes:
      - './certs:/certs:ro'

  kong-dp:
    image: ${KONG_DOCKER_IMAGE:-kong/kong-gateway:3.10.0.5}
    container_name: kong-dp
    networks:
      - kong-net
    depends_on:
      - postgres
      - kong-cp
    restart: on-failure
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
      - "8100:8100/tcp"
    environment:
      KONG_ROLE: data_plane
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "/certs/cluster.crt,system"
      KONG_CLUSTER_CERT_KEY: /certs/cluster.key
      KONG_CLUSTER_CERT: /certs/cluster.crt
      KONG_CLUSTER_CONTROL_PLANE: kong-cp:8005
      KONG_CLUSTER_TELEMETRY_ENDPOINT: kong-cp:8006
      KONG_LOG_LEVEL: debug
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_DATABASE: "off"
      KONG_PASSWORD: kong
    volumes:
      - './certs:/certs:ro'
